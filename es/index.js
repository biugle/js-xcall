var a=function(){function a(){this._callBackMap={}}return a.getInstance=function(){return this.instance||(this.instance=new a),this.instance},a.hasCallBack=function(n,c){var l,t;return!!a.getInstance()._callBackMap[n]&&(null!==(t=null===(l=a.getInstance()._callBackMap[n])||void 0===l?void 0:l.includes(c))&&void 0!==t&&t)},a.existEvent=function(n){var c;return!!a.getInstance()._callBackMap[n]&&!!(null===(c=a.getInstance()._callBackMap[n])||void 0===c?void 0:c.length)},a.addCallBack=function(n,c){var l;a.getInstance()._callBackMap[n]||(a.getInstance()._callBackMap[n]=[]),a.hasCallBack(n,c)||null===(l=a.getInstance()._callBackMap[n])||void 0===l||l.push(c)},a.setOnceCallBack=function(n,c){a.addCallBack(n,(function l(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];null==c||c.apply(null,t),a.removeCallBack(n,l)}))},a.removeCallBack=function(n,c){var l;a.getInstance()._callBackMap[n]&&(a.getInstance()._callBackMap[n]=null===(l=a.getInstance()._callBackMap[n])||void 0===l?void 0:l.filter((function(a){return a!=c})))},a.dispatch=function(n){for(var c=this,l=[],t=1;t<arguments.length;t++)l[t-1]=arguments[t];if(!a.getInstance()._callBackMap[n])throw new Error("未找到回调事件 ".concat(n," 的监听"));a.getInstance()._callBackMap[n].forEach((function(a){null==a||a.apply(c,l)}))},a}();export{a as XCall,a as default};
